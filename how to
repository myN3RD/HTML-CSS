Its totally fine to use inline styles -> good sideeffect is: for each asset we have on a website, is a new request -> that means we have less requests



      SHORTCUTS
      _________

! HTML File Block erstellen
#foo     ENTERN -> DIV generating with an id
.foo     ENTERN -> DIV generating with a class




      HTML CHEETSHEET     https://web.stanford.edu/group/csp/cs21/htmlcheatsheet.pdf
      _______________

create a ordered list <ol> like: 1.
                                 2.
                                 3.
<ol>
  <li></li>
  <li></li>
  <li></li>
</ol>




      NAV LINKS 
      _________

.nav-links {
      display: flex;
      gap: 2rem;            // gap
}




      TAB ICON
      ________

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    <link rel="icon" href="images/logo.png" />      // this line

  </head>




      CLEAN BUTTON DESIGN
      ___________________

.button {
  background-color: rgb(19 21 31);
  color: rgb(254 254 254);
  font-size: 20px;
  padding: 15px 40px;
  border-radius: 40px;
}

.button:hover {
  background-color: rgb(254 254 254);
  color: rgb(19 21 31);
  border: 2px solid rgb(19 21 31);
  cursor: pointer;
}




      JUMP TO SECTION
      _______________

<!-- Anchor Tags to jump to specific sections -->

<li><a href="#portfolio">Portfolio</a></li>





      CSS
      ___

OWN NOTE (needs to be confirmed if it makes sense): always make the design width DYNAMIC -> so we have to use % and no px or rem etc.

-> makes the responsive design much easier



padding:

is the distance from the content -> to the boarder

/* top, right, bottom, left -> (like a clock)*/
padding: 25px 60px 25px 60px;


border:

is the distance from the padding -> to the margin


margin:

is like the boarder around the boarder
margin is the distance from the border -> to the next whatever



      SMOOTH JUMP TO SECTIONS ***
      _______________________

* {
  scroll-behavior: smooth;
}



      PLACING A ITEM CENTERED
      _______________________

.item {
  margin-left: auto;
  margin-right: auto;
}




      CUTTING UP THE EDGES FROM A BUTTON IN A CONTAINER ON THE BOTTOM (WITH BORDER RADIUS)
      ____________________________________________________________________________________

.container {
   overflow: hidden;
}

-> if we have a submit button in a login form for example




      BY DOING SOMETHING -> PAGE WILL JUMP TO THE TOP
      _______________________________________________

#  at href = will make the page jump to the top
-> href = "#";




      AFTER LOGIN FOR EXAMPLE -> CLEAR THE INPUT FIELD
      ________________________________________________

inputLoginUsername.value = inputLoginPin.value = ''; // -> makes an empty string




      THAT THE INPUT FIELD IS LOSING ITS FOCUS
      ________________________________________

inputLoginPin.blur();




      HANDCURSOR
      __________

cursor: pointer; 




      FLEXBOX      
      _______

ONLY WORK IN A FLEX CONTAINER!

display: flex;
justify-content: center;         centering horizontal
align-items: center;             centering vertical

<style>
    .red-box {
        background: red;
        background-color: red;
        height: 100px;
        width: 100px;
    }
    .yellow-box {
        background: rgb(0, 255, 68);
        background-color: rgb(0, 255, 55);
        height: 100px;
        width: 100px;
    }
    h1 {
        color: red;
    }
    .container {
        display: flex;
        justify-content: center;
        align-items: center;
        background-color: grey;
        height: 500px;
    }
    .container2 {
        display: flex;
        background-color: rgb(96, 1, 1);
        height: 500px;
        justify-content: center;
        align-items: center;
        flex-direction: column;
    }

</style>

    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title></title>
</head>
<body>
    <div class="container">
        <div class="red-box"></div>
        <div class="yellow-box"></div>
    </div>
</body>

<main>
    <div class="container2">
        <div class="red-box"></div>
        <div class="yellow-box"></div>
    </div>
</main>


</html>




      OPTIONAL 

(for more creative websites)

-> learn transform and perspective




      Elemente SPIEGELN
      __________________

tranform: scaleX(-1);




      LINKS (Navbar etc.)
      ___________________
                                   
 text-decoration: none;         clears the line under a link
 list-style-type: none;         clears the dots




      IMAGE INDIVIDUAL PLACEMENT
      __________________________

https://developer.mozilla.org/en-US/docs/Web/CSS/background-position?retiredLocale=de




      DIFFERENT BACKGROUND IMAGE PER PAGE
      ___________________________________

html file:

<!DOCTYPE html>
<html class="porsche2" lang="en">      // ->  add the class here!
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Features</title>
    <link rel="stylesheet" href="style.css" />
  </head>

css file:

.skyline {
  background-image: url(images/jonathan-gallegos-5FGqfV6UjzI-unsplash.jpg);
  background-size: cover;
  background-position: center center;
}

.porsche {
  background-image: url(images/taylor-smith-qIiZW1hS-g8-unsplash.jpg);
  background-position: bottom 0px right 0px;
  background-repeat: no-repeat;
  background-size: cover;
}

etc...




      CUSTOM DATE INPUT
      _________________

html file:

<div>
      <input type="date" />
</div>



css file:

/* DATE INPUT */
::-webkit-datetime-edit {
  font-size: 28px;
  font-family: "Roboto", sans-serif;
  border-radius: 5px;
  padding: 10px;
  border: 2px solid;
  margin: 10px;
}
 



      MULTILINE "Input-Form"              POST request          
      ______________________

<form action="/compose" method="POST">       <!-- method="POST" -->
    <textarea type="text" name="postBody" id="" cols="30" rows="10"></textarea>     <!-- the solution for a multiline "input" -->   
    <button type="submit">Publish</button> <!-- type="submit "-->
</form>



-> that the input has the same font-family like the body

font-family: inherit;




      BOOTSTRAP 
      _________

- is a library for CSS 

Sticky FOOTER and so one // SMALL SITES take the whole space of the screen
                  
.main layout {
   min-height: 100vh;
   min-height:100dhv;
   display: grid;
   grid-template-rows:
    auto
    1 fr
    auto;
 border: 3px solid limegreen;
}




      RESPONSIVE DESIGN (with media queries)
      _________________

SYNTAX:

@media () {}

NOTE: 
ALWAYS when developing for Big Screens and not mobile first -> always use (max-width: xxx px)

@media (max-width: 200px) {

}

                  
